[PHP]
; 이 한글판은 개인이 막 번역한 것 입니다. 오역이나 오타가 있을 수 있습니다.
; SeungBum Hyun (orion203@gmail.com)
; last update: 12. Mar. 2014

;;;;;;;;;;;;;;;;;;;
; php.ini 에 대하여 ;
;;;;;;;;;;;;;;;;;;;
; 일반적으로 php.ini 로 불리우는 PHP의 초기화 파일은 PHP의 많은 동작들을 설정하도록 합니다.

; PHP는 많은 파일시스템상의 위치로부터 이 파일을 찾고 설정을 로드하기위해 시도할 것입니다.
; 아래는 설정파일을 추적하는 순서를 요약한 것입니다.
; The following is a summary of its search order:
; 1. SAPI 모듈 지정 위치.
;    SAPI 는 Server Application Programming Interface로
;    PHP가 외부환경과 통신하기위한 것입니다. SAPI의 이름들은 주로 apache, cgi, cli 등이
;    있으며 apache 와 주로 연동해서 사용할 경우에 mod_php5.so 파일이 SAPI 입니다.
; 2. PHPRC 환경 변수.(5.2.0 버전처럼)
;    만일 리눅스를 사용중이고 Apache와 연동이 되어 있다면 다음의 PHPRC 환경변수를 세팅하고
;    Apache 를 기동해주면 PHP는 PHPRC 환경변수에 지정된 장소에서 php.ini 파일을 찾습니다.
;    ]# PHPRC=/usr/src/php5/test
;    ]# export PHPRC
;    ]# server httpd start
; 3. 윈도우즈에서 미리 선언된 수많은 레지스트리 키들.(5.2.0 버전처럼)
; 4. 현재 동작중인 디렉토리.(CLI 제외)
; 5. SAPI 모듈들에 대한 웹서버의 디렉토리 혹은 윈도우즈에서 PHP 디렉토리.
; 6. 컴파일 타임에 --with-config-file-path 옵션에서 지정한 디렉토리
;    혹은 윈도우즈 디렉토리.(C:\windows or C:\winnt)
; 보다 자세한 정보는 PHP 문서를 참조하세요.
; http://php.net/configuration.file

; 이 파일의 문법은 굉장히 단순합니다. 세미콜론(;) 으로 시작되는 화이트스페이스나 라인들은
; 예상하셨다시피 암암리에 무시되어 집니다. 섹션의 머리들(e.g [foo])도, 설사 그것이
; 먼 미래에 어떤 의미를 가질지라도, 암암리에 무시되어 집니다.

; 섹션 헤딩이 [PATH=/www/mysite] 과 같은 지시자라면 이것은 오직
; /www/mysite 디렉토리에 있는 PHP 파일들에만 적용이 됩니다. 지시자들이
; 섹션 헤딩이 [HOST=www.example.com] 과 같은 지시자라면 이것은 오직
; www.example.com 도메인으로 제공되어지는 PHP 파일들에만 적용이 됩니다.
; 지시자들이 이러한 특별한 섹션들을 지정한 경우에 사용자 정의 INI 파일들이나
; 런타임에 재정의 될수 없습니다. 현재, [PHP=]와 [HOST=] 섹션은 오직 CGI/FastCGI
; 에서만 동작합니다.
; http://php.net/ini.sections

; 지시자들은 아래의 문법을 사용해 명시되어 집니다.
; directive = value
; 지시자 이름은 대소문자를 구별합니다. - foo=bar 는 FOO=bar 와 다릅니다.
; 지시자들은 PHP 혹은 PHP 확장들에 설정을 위해사 사용되어지는 값들을 가집니다.
; 이름에 유효성은 없습니다. 만일 PHP가 기대된 지시자를 찾지 못한다면 그것은
; 지정을 않했거나 오타일 수 있으며 이 경우에는 기본 값을 사용합니다.

; 값은 문자, 숫자, PHP 상수(e.g E_ALL or M_PI), INI 상수들중에 하나(On, Off, True, False
; Yes, No 나 None) 혹은 표현식(e.g E_ALL & ~E_NOTICE), 더블 따옴표 문자("bar"), 이전에 지정한
; 값을 참조하는 것이거나 지시자 (e.g. ${foo})일 수 있습니다.

; INI 파일에서 표현식은 비트 연산자들이나 괄호들로 제한 됩니다.
; |  bitwise OR
; ^  bitwise XOR
; &  bitwise AND
; ~  bitwise NOT
; !  boolean NOT

; Boolean 은 1, On, True 나 Yes 값을 사용하면 지시자의 기능을 켤수 있습니다.
; 0, off, False 나 No 값들을 사용하면 지시자의 기능을 끌 수 있습니다.

; 빈 문자열은 단순하게 = 이후에 아무것도 쓰지않거나 None 키워드를 사용해서 표시할 수 있습니다.
;  foo =         ; sets foo to an empty string
;  foo = None    ; sets foo to an empty string
;  foo = "None"  ; sets foo to the string 'None'

; 만일 당신이 변수에 상수를 사용한다면, 그리고 이러한 상수들이 다이나믹하게 로드되어지는 확장들에
; (PHP extension 혹은 Zend extension)을 포함하고 있다면 당신은 오직 이러한 상수들을
; extension 을 로드하도록 지시한 라인 이후에 사용해야 합니다.

;;;;;;;;;;;;;;;;;;;
; 이 파일에 대해서 ;
;;;;;;;;;;;;;;;;;;;
; PHP는 두개의 INI 파일을 가지고 있습니다. 하나는 프로덕션 환경(혹은 서비스 환경)에서
; 사용하길 권장하며 또 다른 하나는 개발 환경에서 사용하길 권장 합니다.

; php.ini-production 은 보안, 성능과 이 PHP 코어에 최적화된 실행등을 위한 세팅을 포함합니다.
; 그러나 주의하세요, 이러한 세팅들은 오래전 버전과 호환성을 깨드리거나 민감한
; 애플리케이션들의 보안을 떨어뜨릴 수 있습니다. 우리는 테스팅 환경이나 프로덕션 환경에서
; 프로덕션 ini 를 사용하기를 권정합니다.

; php.ini-development는 오류가 발생했을 때를 위해 좀 더 자세히 기술한 것을 제외한
; 프로덕션의 변형과 유사합니다. We recommending using the
; development version only in development environments as errors shown to
; application users can inadvertently leak otherwise secure information.

; 이것은 php.ini-production INI 파일 입니다.

;;;;;;;;;;;;;;;;;;;
; Quick Reference ;
;;;;;;;;;;;;;;;;;;;
; 다음은 각각의 PHP의 기본 행동들을 가진 프로덕션 버전과 개발자 버전의 INI 파일의 서로 다른
; 모든 세팅들 입니다. 나중에 이 문서에서 왜 우리가 이렇게 바꾸길 권장하는지를 좀 더
; 자세한 실제적인 세팅들을 보세요. 

; display_errors
;   기본 값: On
;   개발버전 값: On
;   프로덕션버전 값: Off

; display_startup_errors
;   기본 값: Off
;   개발버전 값: On
;   프로덕션버전 값: Off

; error_reporting
;   기본 값: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
;   개발버전 값: E_ALL
;   프로덕션 값: E_ALL & ~E_DEPRECATED & ~E_STRICT

; html_errors
;   기본 값: On
;   개발버전 값: On
;   프로덕션 값: On

; log_errors
;   기본 값: Off
;   개발버전 값: On
;   프로덕션 값: On

; max_input_time
;   기본 값: -1 (Unlimited)
;   개발버전 값: 60 (60 seconds)
;   프로덕션 값: 60 (60 seconds)

; output_buffering
;   기본 값: Off
;   개발버전 값: 4096
;   프로덕션 값: 4096

; register_argc_argv
;   기본 값: On
;   개발버전 값: Off
;   프로덕션 값: Off

; request_order
;   기본 값: None
;   개발버전 값: "GP"
;   프로덕션 값: "GP"

; session.bug_compat_42
;   기본 값: On
;   개발버전 값: On
;   프로덕션 값: Off

; session.bug_compat_warn
;   기본 값: On
;   개발버전 값: On
;   프로덕션 값: Off

; session.gc_divisor
;   기본 값: 100
;   개발버전 값: 1000
;   프로덕션 값: 1000

; session.hash_bits_per_character
;   기본 값: 4
;   개발버전 값: 5
;   프로덕션 값: 5

; short_open_tag
;   기본 값: On
;   개발버전 값: Off
;   프로덕션 값: Off

; track_errors
;   기본 값: Off
;   개발버전 값: On
;   프로덕션 값: Off

; url_rewriter.tags
;   기본 값: "a=href,area=href,frame=src,form=,fieldset="
;   개발버전 값: "a=href,area=href,frame=src,input=src,form=fakeentry"
;   프로덕션 값: "a=href,area=href,frame=src,input=src,form=fakeentry"

; variables_order
;   기본 값: "EGPCS"
;   개발버전 값: "GPCS"
;   프로덕션 값: "GPCS"

;;;;;;;;;;;;;;;;;;;;
; php.ini 옵션들  ;
;;;;;;;;;;;;;;;;;;;;
; 사용자 정의된 php.ini (.htaccess) 파일들에대한 이름. 기본 값은 ".user.ini" 입니다.
; 
;user_ini.filename = ".user.ini"

; 이 기능을 비활성화하기 위해서는 이 옵션에 빈 값을 지정합니다.
;user_ini.filename =

; 사용자 정의된 php.ini 파일들에 대한 초 단위의 TTL. 기본 값은 300초(5 분).
;user_ini.cache_ttl = 300

;;;;;;;;;;;;;;;;;;;;
;   PHP 언어 옵션   ;  
;;;;;;;;;;;;;;;;;;;;

; Apache 웹 서버하에서 PHP 스크립팅 언어 엔진 활성화
; http://php.net/engine
engine = On

; 이 지시자는 <? 과 ?> 사이에 코드를 마치 PHP 소스를 처리해야하는 것으로
; 인식하도록 할지 말지를 결정합니다.일반적으로 <?php 와 ?> 를 사용하도록 권장하며
; 이 기능은 XML 문서를 생성할 때 활성화로 인해서 문제가 발생할 수 있기에
; 비활성화 해두길 바라며, 단지 하위 호환성을 위해서 남겨둔 것입니다.
; 이 지시자는 <?= 짧은 태그를 통제하진 않으며 이는 이 지시자에 관계없이 사용할 수 있습니다.
; 기본 값: On
; 개발버전 값: Off
; 프로덕션 값: Off
; http://php.net/short-open-tag
short_open_tag = Off

; ASP 스타일 <% %> 태그들을 허용합니다.
; http://php.net/asp-tags
asp_tags = Off

; 부동 소수점 숫자에서 표시되는 유효 숫자의 수.
; http://php.net/precision
precision = 14

; Output buffering은 PHP가 클라이언트에게 데이터를 넘기기전에 내부적으로 가지고 있어야 할때
; output 데이터를 얼마나 컨트롤할지에 대한 매커니즘입니다. 만약 당신의 애플리케이션의 output이
; 이 세팅 값을 넘어서면 PHP는 당신의 지정한 대략적인 크기의 데이터를 보냅니다.
; 이 세팅을 켜거나 최대 버퍼 크기를 관리하는 것은 당신의 애플리케이션과 웹서버에 의존중인
; 어떤 흥미로운 다른 영향을 만들어 낼 수 있습니다.
; 당신은 이미 print 나 echo 를 통해서 출력을 보낸 이후에 헤더나 쿠키들을 전송할 수 있습니다.
; 또, 만약 서버가 PHP 스트리밍 출력 대비 버퍼된 출력으로 인해 적은 패킷을 내보내는 경우
; 당신은 성능상의 이득을 볼 수 있습니다.프로덕션 서버들에서 4096 bytes 는 성능상 충분한 세팅 값입니다.
; 알림: Output buffering 은 또한 Output Buffering Control 함수들에 의해서 제어될 수 있습니다.
; 가능한 값들:
;   On = 활성화하고 버퍼 무제한.
;   Off = 비활성화
;   Integer = 버퍼를 활성화하고 바이트 단위로 최대크기를 지정.
; 알림: 이 지시자는 CLI SAPI 에서는 Off 로 하드코드되어 있습니다.
; 기본 값: Off
; 개발버전 값: 4096
; 프로덕션 값: 4096
; http://php.net/output-buffering
output_buffering = 4096

; 당신은 스크립트의 모든 출력을 함수로 다시 돌려보낼 수 있습니다. 예를들어,
; output_handler 지시자에 "mb_output_handler"를 지정했다면
; 캐릭터 인코딩은 투명하게 지정된 인코딩으로 변환되어 질 수 있습니다.
; 자동으로 모든 output handler를 설정하면 output buffering 을 켭니다.
; 알림: 간편한 스크립트를 작성하는 사람들은 이 ini 지시어에 의존해서는 안됩니다.
;      대신에 명시적으로 ob_start()를 사용해서 output handler 를 지정하세요.
;      스크립트가 하는 일이 무엇인지 모른채 이 ini 지시자를 사용하는 것은
;      문제를 발생시킬 수 있습니다.
; 알림: 당신은 ob_iconv_handler 와 mb_output_handler 를 함께 사용할 수 없으며
;      zlib.output_compression 과 ob_gzhandler 를 사용할 수 없습니다.
; 알림: output_handler는 이것을 On 으로 지정한다면 비워둬라!!!!!
;      대신 zlib.output_handler 를 사용해라.
; http://php.net/output-handler
;output_handler =

; zlib 라이브러를 사용해서 투명 출력 압축.
; 이 옵션에 알맞은 값들은 'off', 'on' 이거나 압축하는데 사용되어질
; 지정된 버퍼 크기 (기본값 4kb) 입니다.
; 알림: 
; Note: Resulting chunk size may vary due to nature of compression. PHP
;   outputs chunks that are few hundreds bytes each as a result of
;   compression. If you prefer a larger chunk size for better
;   performance, enable output_buffering in addition.
; Note: You need to use zlib.output_handler instead of the standard
;   output_handler, or otherwise the output will be corrupted.
; http://php.net/zlib.output-compression
zlib.output_compression = Off

; http://php.net/zlib.output-compression-level
;zlib.output_compression_level = -1

; 만일 당신이 zlib.output_compression 을 설정을 여기서 활성화 한다면
; 추가로 output 핸들러를 설정할 수 없습니다. 이 세팅은 output_handler 와 같지만
; 다른 order 입니다.
; http://php.net/zlib.output-handler
;zlib.output_handler =

; 묵시적인 플러시(flush)는 모든 출력 블럭 이후에 자동적으로 그것을 플러쉬하도록 출력 레이어에게
; 통보하라고 PHP 에게 알려줍니다. 이것은 모든 HTML 블럭과 echo() 함수 혹은 print() 호출 이후에
; PHP 함수인 flush() 를 호출하는 것과 같습니다. 이 옵션을 켠다는 것은 심각한 성능상 영향을
; 미치며 일반적으로 디버깅 목적으로만 사용하길 권장합니다.
; 알림: 이 지시자는 CLI SAPI 에 대해서 켜지도록 하드코딩되었습니다.
implicit_flush = Off

; The unserialize callback function will be called (with the undefined class'
; name as parameter), if the unserializer finds an undefined class
; which should be instantiated. A warning appears if the specified function is
; not defined, or if the function doesn't include/implement the missing class.
; So only set this entry, if you really want to implement such a
; callback-function.
unserialize_callback_func =

; When floats & doubles are serialized store serialize_precision significant
; digits after the floating point. The default value ensures that when floats
; are decoded with unserialize, the data will remain the same.
serialize_precision = 17

; open_basedir, 만일 설정한다면, 정의된 디렉토리와 그 이하 디렉토리로 모든 파일의 연산들을
; 제한합니다. 이 지시자는 단 하나의 디렉토리를 사용하거나 웹서버 설정 파일에 각 버추얼 호스트를
; 이용할때 매우 유용합니다. 이 지시자는 Safe Mode 의 On, Off 에 영향을 받지 않습니다.
;
; 동작을 제한한다는게 아닙니다. PHP에 의해서 액세스되어질 수 있는 파일들을 제한
; 한다는 것이고 여기에 기술된 디렉토리만이 PHP에 의해서 액세스되어 질 수 있다는 뜻입니다.
; include, fopen() 함수를 사용할 경우 PHP는 open-basedir 의 정의된 디렉토리인지 체크합니다.

; http://php.net/open-basedir
;open_basedir =

; 이 지시자는 보안상의 이유로 특정한 함수들을 비활성화도록 해줍니다. 콤마(,)로 구분되는
; 함수의 리스트를 받습니다. 이 지시자는 Safe Mode 의 On, Off 에 영향을 받지 않습니다.
; http://php.net/disable-functions
disable_functions =

; 이 지시자는 보안상의 이유로 특정한 클래스들을 비활성화하도록 해줍니다. 콤마(,)로 구분되는
; 함수의 리스트를 받습니다. 이 지시자는 Safe Mode 의 On, Off 에 영향을 받지 않습니다.
; http://php.net/disable-classes
disable_classes =

; 문법 하이라이팅 모드에 대한 컬러. <span style="color: ???????"> 에서 쓰일 수 있는
; 모든 것이 동작합니다.
; http://php.net/syntax-highlighting
;highlight.string  = #DD0000
;highlight.comment = #FF9900
;highlight.keyword = #007700
;highlight.default = #0000BB
;highlight.html    = #000000

; 만약 활성화한다면 요청은 사용자가 요청을 취소한다고 하더라도 완료되도록 허용되어 집니다.
; 긴 요청을 실행하는데, 사용자에 의해서 중단되거나 브라우저 타임아웃으로 중되어지고 끝날 경우에
; 이것을 활성화하는 것을 고려해야 합니다. PHP의 기본 행동은 비활성화 입니다.
; http://php.net/ignore-user-abort
;ignore_user_abort = On

; PHP에의해서 사용되어질 realpath 캐쉬 사이즈 크기를 결정합니다. 이 값은 
; 이 값은 수행 된 파일 작업의 양을 반영하기 위해 PHP가 많은 파일을 여는 시스템에서는
; 증가시켜주어야 합니다.

; 이 값의 크기는 저장된 패스 스트링과 캐쉬 전체와 연계된 데이터의 크기를 더한
; 전체 byte양을 나타냅니다.
; http://php.net/realpath-cache-size
;realpath_cache_size = 16k

; 주어진 파일이나 디렉토리에 대한 realpath 정보를 캐쉬하는 시간(초 단위)을 지정합니다.
; 파일에 변경이 거의 없는 시스템의 경우에 이 값을 증가시키는 것을 고려해 보세요.
; http://php.net/realpath-cache-ttl
;realpath_cache_ttl = 120

; 순환 참조 수집기를 활성화하거나 비활성화.
; http://php.net/zend.enable-gc
zend.enable_gc = On

; 만약 이것을 활성화하면, 스크립트는 아마도 스캐너와 호환되지 않는 인코딩을 가지고 작성하게 될겁니다.
; CP936, Big5, CP949 와 Shift_JIS 는 그러한 인코딩의 한 예입니다. 이 기능을 사용하기위해서는
; msbstring 확장을 반드시 활성화해야 합니다.
; Default: Off
;zend.multibyte = Off

; 스크립트에 대한 기본 인코딩 지정을 허용합니다. 이 값은 "declare(encoding=...)" 지시자가
; 스크립트 맨 위에 나타나지 않을 경우에 사용되어질 수 있습니다.
; 만약 zend.multibyte 가 지정되어 있을때만 영향을 줍니다.
; Default: ""
;zend.script_encoding =

;;;;;;;;;;;;;;;;;
; Miscellaneous ;
;;;;;;;;;;;;;;;;;

; PHP가이 서버에 설치되어 있다는 사실을 노출시킬 수 있는지 여부를 결정합니다. (e.g
; 웹 서버 헤더에 서명을 추가함으로) 어떤 방식으로 어떤 보안 위협이 없지만
; 당신의 서버에서 PHP를 사용하는지 않하는지 여부를 확인할 수 있도록 해줍니다.
; http://php.net/expose-php
expose_php = On

;;;;;;;;;;;;;;;;;;;
; Resource Limits ;
;;;;;;;;;;;;;;;;;;;

; 각 스크립트의 최대 실행 시간, 초단위.
; http://php.net/max-execution-time
; 알림: 이 지시자는 CLI SAPI 에서는 0 으로 하드코딩 되었습니다.
max_execution_time = 30

; 각 스크립트가 요청 데이터를 파싱하는데 소비하는데 필요한 최대 시간. 프로덕트 서버에서 예기치못하게
; 긴 시간동안 동작하는 스크립트를 제거하기 위해서 이 시간을 설정해 제한하는 것은 좋은 아이디어 입니다.
; 이 지시자는 CLI SAPI 에서는 -1 로 하드코딩 되었습니다.
; 기본 값: -1 (Unlimited)
; 개발버전 값: 60 (60 seconds)
; 프로덕션 값: 60 (60 seconds)
; http://php.net/max-input-time
max_input_time = 60

; 최대 입력 변수 중첩수준
; http://php.net/max-input-nesting-level
;max_input_nesting_level = 64

; 얼마나 많은 GET/POST/COOKIE 입력 변수를 받을 것인가?
; max_input_vars = 1000

; 스크립트가 소비할 최대 메모리 양.
; http://php.net/memory-limit
memory_limit = 128M

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Error handling and logging ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; 이 지시자는 에러들, 경고들, 주의들과 같은 당신이 좋아라하는 행동을 가지도록 PHP에 알려줍니다.
; 이 지시자에 대해 값을 세팅하는 추천 방법은 에러 레벨 상수나 비트 연산을 사용을
; 통한 방법입니다. 에러 레벨 상수는 아래에 이해하기 쉽도록 몇몇 일반 세팅들과 그들의 의미를 기술했습니다.
; 기본적으로 PHP는, E_NOTICE 와 E_STRICT 등 PHP 에서 모범 사례와 권장 코딩 표준을 모두 포함한,
; 그들과 연관것을 제외한 모든 에러들, 주의들, 경고들에 대해서 행동을 하도록 설정되어 있습니다. 
; By default, PHP is set to take action on all errors, notices and warnings EXCEPT
; those related to E_NOTICE and E_STRICT, which together cover best practices and
; recommended coding standards in PHP.
; 성능상의 이유로, 에러 리포팅 세팅을 추천 합니다. 당신의 프로덕션 서버는 모범 사례와 코딩 표준에 대해 불평하는데
; 리소스를 낭비하지 않을 겁니다. 그것은 개발 서버나 개발 세팅을 위한 것입니다.
; 알림: php.ini-development 파일은 E_ALL 로 세팅이 되었습니다. 이것은 당신이 개발과 빠른 테스팅을 하는 동안
; 정확하게 무엇을 원하는지에 대한 아주 많은 리포트를 해준다는 것을 의미 합니다.
;
; 에러 레벨 상수들:
; E_ALL             - 모든 에러들과 경고들 (includes E_STRICT as of PHP 5.4.0)
; E_ERROR           - 치명적인 런 타임 에러들.
; E_RECOVERABLE_ERROR  - 대부분 치명적인 런 타임 에러들.
; E_WARNING         - 런 타임 경고들 (치명적이지 않은 에러들)
; E_PARSE           - 컴파일 타임에 파스(parse) 에러들
; E_NOTICE          - 런 타임 주의들 (이것들은 당신의 코드에 버그로부터 종종 나타나는 경고들입니다.
;                     하지만 의도적면도 있습니다. (e.g, 최기회되지 않은 변수와 자동으로
;                     빈 문자열로 초기화되는 사실에 의존하는 경우))
; E_STRICT          - 런 타임 주의들, PHP가 당신의 코드를 최고의 상호운영 될 수 있고 앞으로 호환이 가능하도록
;                     바꾸도록 제한할 수 있습니다.
; E_CORE_ERROR      - PHP의 초기화 시작시 발생한 치명적인 에러들.
; E_CORE_WARNING    - PHP의 초기화 시작시 발생한 경고들(치명적이지 않은 에러들)
; E_COMPILE_ERROR   - 치명적 컴파일 시간 에러들.
; E_COMPILE_WARNING - 치명적 컴파일 시간 경고들.(치명적이지 않은 에러들)
; E_USER_ERROR      - 사용자 생성 에러 메시지
; E_USER_WARNING    - 사용자 생성 경고 메시지
; E_USER_NOTICE     - 사용자 생성 주의 메시지
; E_DEPRECATED      - 앞으로 PHP 미래 버전에서 동작하지 않을 코드에 대한 경고
; E_USER_DEPRECATED - 사용자 생성 deprecation 경고들
;
; 일반 값들:
;   E_ALL (코딩 표준에 포함된 모든 에러들, 경고들, 주의들을 출력)
;   E_ALL & ~E_NOTICE  (주의들을 제외한 모든 에러들을 출력)
;   E_ALL & ~E_NOTICE & ~E_STRICT  (코딩 표준 경고들과 주의들을 제외한 모든 에러 출력)
;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (오직 에러들만 출력)
; 기본 값: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
; 개발버전 값: E_ALL
; 프로덕션 값: E_ALL & ~E_DEPRECATED & ~E_STRICT
; http://php.net/error-reporting
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT

; 이 지시자는 PHP가 에러들, 주의들, 경고들을 출력할지 말지를 결정합니다. 에러 출력은 개발동안
; 매우 유용하지만 프로덕션 환경에서는 매우 위험합니다. 오류를 유발하는 코디에 따라, 데이터베이스 사용장이름과
; 패스워드 혹은 그보다 더한 민감한 정보는 잠재적으로 당신의 응용 프로그램 밖으로 유출될 수 있습니다.
; 프로덕션 서버들에서 STDOUT 으로 에러들을 보내기 보다는 에러들을 로깅될수 있도록 권장 합니다.
; 가능한 값들:
;   Off = 어떤 에러들이라도 출력하지 않음
;   stderr = STDERR에 에러들 출력(오직 CGI/CLI 바이네리에만 적용)
;   On or stdout = STDOUT에 에려들 출력.
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: Off
; http://php.net/display-errors
display_errors = Off

; PHP의 시작 시점에서 발생된 에러들 출력은 display_errors 와 별도로 다루어 집니다. PHP의 기본적인 행동은
; 클라이언트로부터 그러한 에러들을 숨기는 것입니다. 시작 에러들을 출력하는 것은 설정 문제를 디버깅하는데 유용할 수 있습니다.
; 하지만, 프로덕션 서버에서는 이 세팅을 off 로 해놓기를 강력히 권장합니다.
; 기본 값: Off
; 개발버전 값: On
; 프로덕션 값: Off
; http://php.net/display-startup-errors
display_startup_errors = Off

; 에러들을 출력하는 측면에서, PHP는 서버가 지정한 로그, STDERR, 혹은 밑에서 볼수 있는 error_log 지시자에 의해
; 지정된 위치와 같은 곳에 에러들을 기록할 수 있습니다. 이것은 에러들을 출력해서는 안되는 프로덕션 서버들을 모티터하고
; 로깅해야 할때 매우 좋은 방법입니다.
; 기본 값: Off
; 개발버전 값: On
; 프로덕션 값: On
; http://php.net/log-errors
log_errors = On

; log_errors 의 최대 길이. 소스에 대한 error_log 정보에서 추가된다. 기본적으로 1024 이고 0 은
; 최대 길이가 적용되지 않습니다.
; http://php.net/log-errors-max-len
log_errors_max_len = 1024

; 반복되는 메시지를 기록하지 않습니다. 반복되는 에러들은 lgnore_repeated_source 를 true 로 지정하지 않으면
; 같을 파일에 같은 라인에서 발생될 수 있습니다.
; http://php.net/ignore-repeated-errors
ignore_repeated_errors = Off

; 반복되는 메시지를 무시하면 소스 메시지를 무시. 이 세팅을 설정하면 당신은 서로 다른 파일들이나 소스 라인들로부터
; 반복되는 메시지들을 가진 에러들을 기록하지 않습니다. 
; http://php.net/ignore-repeated-source
ignore_repeated_source = Off

; 만약 이 파라메터를 off 로 지정하면, 메모리 릭(memory leak)은 stdout 혹은 기록으로 보여지지 않습니다.
; 이것은 오직 debug 컴파일에 영향을 받고, 에러 리포트가 E_WARNING 을 포함하면 됩니다.
; http://php.net/report-memleaks
report_memleaks = On

; 이 세팅은 기본적으로 on 입니다.
;report_zend_debug = 0

; 마지막 에러/경고 메시지를 $php_errormsg 에 저장합니다. 이 값을 On 으로 세팅하는 것은 디버깅에 도움을
; 줄수 있으며 개발 서버들에 적합합니다. 반대로 프로덕션 서버들에서는 비활성화 됩니다.
; 기본 값: Off
; 개발버전 값: On
; 프로덕션 값: Off
; http://php.net/track-errors
track_errors = Off

; 일반적인 에러 리포팅 XML과 XML-RPC 에러 XML 을 끕니다.
; http://php.net/xmlrpc-errors
;xmlrpc_errors = 0

; An XML-RPC faultCode
;xmlrpc_error_number = 0

; PHP가 에러를 출력 혹은 기록할때, 읽기 쉽도록 HTML 처럼 에러메시지를 포맷팅하는 기능이 있습니다.
; 이 지시자는 에러 메시지를 HTML 로 포맷팅을 할지 말지를 결정합니다.
; 알림: 이 지시자는 CLI SAPI에서 Off 로 하드코딩 되었습니다.
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: On
; http://php.net/html-errors
html_errors = On

; 만약 html_errors 가 On 으로 되어 있고 docref_root 가 비여 있다면 PHP는
; 세세하게 오류를 발생시킨 함수나 직접적인 오류를 볼수 있는 페이지에 대한 클릭할 수 있는
; 에러 메시지들을 만들어 냅니다.
; 당신은 http://php.net/docs 에서 PHP 메뉴얼의 복사본을 다운로드 할 수 있고
; '/'로 시작점으로 포함한 로컬 위치의 기본 URL 을 docref_root 에 바꿔 넣을 수 있습니다.
; 또, 당신은 dot 를 포함해서 사용되어지는 파일의 확장자를 정의할 수 있습니다. 
; PHP의 기본 행동은 생성된 문서의 링크가 없을때에 세팅을 빈값으로 두는 것입니다. 
; 주의: 절대 프로덕트 이 기능을 사용하지 마세요.
; http://php.net/docref-root
; Examples
;docref_root = "/phpmanual/"

; http://php.net/docref-ext
;docref_ext = .html

; 오류 메시지 전에 출력을 위한 스트링. PHP의 기본 행동은 이것을 빈 값으로 남겨두는 것입니다. 
; http://php.net/error-prepend-string
; Example:
;error_prepend_string = "<span style='color: #ff0000'>"

; 오류 메시지 이후에 출력을 위한 스트링. PHP의 기본 행동은 이것을 빈 값으로 남겨두는 것입니다. 
; http://php.net/error-append-string
; Example:
;error_append_string = "</span>"

; 정의된 파일에 오류 기록. PHP의 기본 행동은 이것을 빈 값으로 남겨도눈 것입니다. 
; http://php.net/error-log
; Example:
;error_log = php_errors.log
; syslog 에 오류 기록 (Event Log on NT, not valid in Windows 95).
;error_log = syslog

;windows.show_crt_warning
; 기본 값: 0
; 개발버전 값: 0
; 프로덕션 값: 0

;;;;;;;;;;;;;;;;;
; Data Handling ;
;;;;;;;;;;;;;;;;;

; PHP에서 생성되어진 URLs 에 인수를 분리하기 위해 사용되어질 분리자
; PHP 기본 세팅은 "&".
; http://php.net/arg-separator.output
; Example:
;arg_separator.output = "&amp;"

; 입력 URLs 를 변수로 파스하기위해 PHP가 사용할 분리자들의 리스트.
; PHP의 기본 세팅은 "&".
; 주의: 이 지시자에서 모든 문자는 분리자차럼 여겨집니다.
; http://php.net/arg-separator.input
; Example:
;arg_separator.input = ";&"

; 이 지시자는 PHP가 시작될때에 슈퍼 글로벌 배열로 등록되어질지를 결정합니다.
; G,P,C,E & S 는 다음의 개별적인 슈퍼 글로벌의 축약입니다. GET, POST, COOKIE,
; ENV 그리고 SERVER. 이러한 배열의 등록의 대가로 성능상의 불이익이 있으며 ENV가
; 일반적으로 다른것과 사용되어지지 않기 때문에 프로덕트 서버에서 ENV 는 추천하지 않습니다.
; 여전히, 당신은 필요하다면 getenv()를 통해서 환경 변수들을 접근할 수 있습니다.
; 기본 값: "EGPCS"
; 개발버전 값: "GPCS"
; 프로덕션 값: "GPCS";
; http://php.net/variables-order
variables_order = "GPCS"

; 이 지시자는 슈퍼 글로벌 데이터(G,P,C,E & S)가 슈퍼 글로벌 배열 REQUEST 에 등록되어질 수 있는지를
; 결정 합니다. 만약 그렇다면, 이는 또 데이터가 등록되어지는 순서를 결정 합니다.
; 이 지시자에 대한 값들은 단 하나만 제외하고 variable_order 지시자처럼 같은 방식으로 정의되어 집니다.
; 이 값들 빈 값으로 남겨놓는 것은 PHP에게 variables_orders 지시자에 지정된 값을 사용하도록 합니다.게
; 이것은 슈퍼 글러벌 배열 REQUEST 를 빈 값으로 남겨놓는다는 뜻은 아닙니다.
; 기본 값: None
; 개발버전 값: "GP"
; 프로덕션 값: "GP"
; http://php.net/request-order
request_order = "GP"

; 이 지시자는 PHP가 실행될때에 각각 $argv & $argc 를 등록할지 결정 합니다. $argv 는 스크립트가 실행될때
; PHP에 전달되어지는 모든 인자의 배열을 가집니다. $argcv 는 스크립트가 실행될때에 전달되어진 인자의 숫자를
; 정수형으로 변환해서 가집니다.이러한 배열들은 커맨드 라인에서 스크립트가 샐행될때에 매우 유용합니다.
; 이 지시자가 활성화되면, 등록된 이러한 변수들은 CPU 와 메모리를 매 실행시마다 소모 합니다. 성능상의 이유로
; 이 기능은 프로덕트 서버들에서는 비활성화 되어야 합니다.
; 주의: 이 지시자는 CLI SAPI 에서는 On 으로 하드코드 되었습니다.
; 기본 값: On
; 개발버전 값: Off
; 프로덕션 값: Off
; http://php.net/register-argc-argv
register_argc_argv = Off

; 활성화되었다면, ENV, REQUEST 그리고 SEVER 변수들은 스크립트가 시작될때가 아닌 그들이 처음으로 사용되어질때에
; 생성됩니다. 만약 이러한 값들이 스크립트에서 사용되어지지 않는다면, 이 지시자가 On 을 가짐은 성능상의 이득을
; 가져다 줄 것 입니다. PHP 지시자 register_argc_argv 는 모든 영향을 가질 수 있는 이 지시자에 대해서
; 반드시 비활성화 되어져야 합니다.(The PHP directive register_argc_argv must be disabled
; for this directive to have any affect.)
; http://php.net/auto-globals-jit
auto_globals_jit = On

; PHP가 POST 데이터를 읽을지 말지를 
; Whether PHP will read the POST data.
; This option is enabled by default.
; Most likely, you won't want to disable this option globally. It causes $_POST
; and $_FILES to always be empty; the only way you will be able to read the
; POST data will be through the php://input stream wrapper. This can be useful
; to proxy requests or to process the POST data in a memory efficient fashion.
; http://php.net/enable-post-data-reading
;enable_post_data_reading = Off

; PHP가 받을 수 있는 POST 데이터의 최대 크기.
; 제한을 비활성화 하기위해서 0으로 해줘야 합니다. 만약 POST 데이터 읽기가
; enable_post_data_reading 에 의해서 비활성화 되었다면 무시됩니다. 
; http://php.net/post-max-size
post_max_size = 8M

; 자동적으로 PHP 문서 앞에 파일을 붙입니다.
; http://php.net/auto-prepend-file
auto_prepend_file =

; 자동적으로 PHP 문서뒤에 파일을 붙입니다.
; http://php.net/auto-append-file
auto_append_file =

; 기본적으로, PHP는 Content-type: header 를 사용해 캐릭터 인코딩을 출력합니다.
; charset 의 출력을 비활성화하기위해서는 단순하게 빈값으로 두면 됩니다.

; PHP의 내장된 기본값은 text/html 입니다.
; http://php.net/default-mimetype
default_mimetype = "text/html"

; PHP의 기본 캐릭터 셋은 빈값으로 지정합니다.
; http://php.net/default-charset
;default_charset = "UTF-8"

; 항상 $HTTP_RAW_POST_DATA 변수에 채 웁니다. PHP의 기본 행동은 이 기능이 비활성화 입니다.
; 만약 post 읽는 것이 enable_post_data_reading 을 통해서 비활성화 되었다면,
; $HTTP_RAW_POST_DATA 에는 채워지지 않습니다.
; http://php.net/always-populate-raw-post-data
;always_populate_raw_post_data = On

;;;;;;;;;;;;;;;;;;;;;;;;;
; Paths and Directories ;
;;;;;;;;;;;;;;;;;;;;;;;;;

; UNIX: "/path1:/path2"
;include_path = ".:/php/includes"
;
; Windows: "\path1;\path2"
;include_path = ".;c:\php\includes"
;
; include_path 에 대한 PHP의 기본 세팅은 ".;/path/to/php/pear" 입니다.
; http://php.net/include-path

; PHP 페이지의 root는 빈공간이 아닐때만 사용되어 집니다.
; 만약 PHP가 FORCE_REDIRECT 로 컴파일되지 않았다면, 당신은 doc_root 를 반드시 설정해야 합니다.
; 만약 당신이 어떤 웹서버에서 CGI로 PHP를 운영중이라면 보안 이슈와 관련된 문서를 보세요.
; 다른 것으로 http://php.net/doc-root 에 있는  cgi.force_redirect 설정
; 사용할 수 있습니다.
doc_root =

; PHP 내에 있는 디렉토리는 빈 공간이 아닌 경우에 /~username 을 사용하는 스크립트를 엽니다.
; 빈공간이 PHP 내의아닌 /~username 를 사용하는 스크립트를 여는 
; http://php.net/user-dir
user_dir =

; 로드 가능한 확장 (모듈)이 상주하는 디렉토리
; http://php.net/extension-dir
; extension_dir = "./"
; On windows:
; extension_dir = "ext"

; 임시파일이 위치할 디렉토리.
; 시스템 디폴트가 기본 값입니다. 
; sys_temp_dir = "/tmp"

; dl() 함수를 활성화할지 비활성할지 결정. dl() 함수는 멀티스레드된 IIS나 Zeus같은 서버에서는
; 제대로 동작하지 않으며 그와같은 서버에서는 자동적으로 비활성화 됩니다.
; http://php.net/enable-dl
enable_dl = Off

; cgi.force_redirect 는 대부분의 웹 서버에서 CGI로 운영되는 PHP의 경우에 보안을 제공할 필요가 있습니다.
; Left undefined, PHP는 기본적으로 이것을 켭니다. 당신은 당신이 리스크를 감당한다면 이것을 off할 수 있습니다.
; ** 당신은 IIS 에서는 안전하게, 사실 반드시, 이것을 Off 할 수 있습니다. **
; http://php.net/cgi.force-redirect
;cgi.force_redirect = 1

; 만약 cgi.nph 가 활성화 된다면 cgi 가 모든 요청에 대해 Status:200 으로 항상 보내도록 강제 합니다.
; PHP의 기본 행동의 이 기능은 비활성화 됩니다.
;cgi.nph = 1

; 만약 cgi.force_redirect 가 활성화되었고 아파치 혹은 넷스케치이프 웹서버에서 운영중이 아니라면
; you MAY need to set an environment variable name that PHP
; will look for to know it is OK to continue execution.  이 변수의 세팅은
; 보안 이슈를 발생시킨다기 때문에 사용하기전에 이것이 무엇인지 알아야 한다. 
; http://php.net/cgi.redirect-status-env
;cgi.redirect_status_env =

; cgi.fix_pathinfo는 CGI에 대한 * 실제 * PATH_INFO / PATH_TRANSLATED 지원을 제공합니다.
; PHP의 이전 동작은 SCRIPT_FILENAME에 PATH_TRANSLATED를 설정 했었고 PATH_INFO를 이해하지 못했다.
; PATH_INFO 에 대한 자세한 내용은 cgi 스펙을 보시면 됩니다. 이 값을 1로 설정하면 PHP CGI가 규격을
; 준수하기 위해 경로를 수정하게됩니다. 0으로 세팅하면 PHP는 이전과 같이 동작 합니다. 기본값은 1 입니다.
; 여러분은 PATH_TRANSLATED 보다 SCRIPT_FILENAME 을 사용하도록 스크립트를 수정해야 합니다.
; http://php.net/cgi.fix-pathinfo
;cgi.fix_pathinfo=1

; (WINNT 기반 OS에) IIS에서 FastCGI를 호출하는 클라이언트의 보안 토큰을 가장 할 수있는 기능을 지원합니다.
;
; ISS (WINNT 기반 OS에서) 하에 FastCGI는 호출하는 클라이언트의 보안 토큰을 가장 할 수있는 기능을 지원합니다.
; 이것은 IIS에게 요청에 대한 보안 컨텍스트를 정의 할 수 있습니다. 아파치하에 mod_fastcgi 는 현재로선 이 기능을
; 지원하지 않습니다. (03/17/2002) 
; IIS에서 운영중이라면 1로 세팅하세요. 기본은 0 입니다.
; http://php.net/fastcgi.impersonate
;fastcgi.impersonate = 1

; FastCGI 접속을 통한 로깅을 비활성화 합니다. PHP의 기본 행동은 이 기능이 활성화 합니다.
;fastcgi.logging = 0

; cgi.rfc2616_headers 설정 옵션은 HTTP 응답 코드를 보낼때에 무슨 헤더 타입을 사용할지를 PHP에 말해줍니다.
; 만약 이것을 0으로 세팅하면 PHP는 아파치에 의해서 지원되는 header 를 보냅니다.
; 이 옵션을 1로 지정하면 PHP는 RFC2616 호환 헤더를 보냅니다. 
; 기본 값은 0 입니다.
; http://php.net/cgi.rfc2616-headers
;cgi.rfc2616_headers = 0

;;;;;;;;;;;;;;;;
; File Uploads ;
;;;;;;;;;;;;;;;;

; HTTP 파일 업로드를 허용할지 말지.
; http://php.net/file-uploads
file_uploads = On

; HTTP 업로드된 파일을 위한 임시 디렉토리 (정의하지 않으면 시스템 기본값을 사용할 것이다.)
; http://php.net/upload-tmp-dir
;upload_tmp_dir =

; 업로드된 파일에 대한 최대 허용 크기.
; http://php.net/upload-max-filesize
upload_max_filesize = 2M

; 단일 요청에 의해 업로드되어 질수 있는 최대 파일 갯수.
max_file_uploads = 20

;;;;;;;;;;;;;;;;;;
; Fopen wrappers ;
;;;;;;;;;;;;;;;;;;

; URL들(http:// 나 ftp://)을 파일처럼 다루는것을 허용할지 말지 결정.
; http://php.net/allow-url-fopen
allow_url_fopen = On

; include/require 를 URL(http:// 나 ftp://) 파일처럼 여는것을 허용할지 말지 결정.
; http://php.net/allow-url-include
allow_url_include = Off

; anonymous ftp 패스워드(여러분의 email 주소) 정의. PHP의 기본 세팅은 빈 값입니다.
; http://php.net/from
;from="john@doe.com"

; User-Agent 문자열 정의. PHP의 기본 세팅은 빈 값입니다.
; http://php.net/user-agent
;user_agent="PHP"

; 스트림 기반의 소켓에 대한 기본 타임아웃(초 단위).
; http://php.net/default-socket-timeout
default_socket_timeout = 60

; 만약 여러분의 스크립트들이 매킨토시 시스템에서 파일들을 다룬다거나 맥에서 운영 중이면
; win32 시스템들이나 유닉스로부터 파일을 다루기가 필요가 있다면 이 플래그 세팅은
; PHP 에게 fget() 과 file() 함수들이 파일 소스와 관계없이
; 그러한 파일들에서 자동적으로 EOL 캐릭터를 탐지하도록 합니다.
; http://php.net/auto-detect-line-endings
;auto_detect_line_endings = Off

;;;;;;;;;;;;;;;;;;;;;;
; Dynamic Extensions ;
;;;;;;;;;;;;;;;;;;;;;;

; 만약 여러분이 확장을 자동적으로 로드되길 원한다면, 아래 문법을 따라 사용하면 됩니다.
; syntax:
;
;   extension=modulename.extension
;
; 예를들어, 윈도우에서는:
;
;   extension=msql.dll
;
; ... 혹은 UNIX:
;
;   extension=msql.so
;
; ... 혹은 경로와함께:
;
;   extension=/path/to/extension/msql.so
;
; 만일 여러분이 오직 확장의 이름만 제공한다면, PHP는 기본 확장 디렉토리에서 그것을 찾을 것입니다.
;
;
; Windows Extensions
; 주의) ODBC 지원은 내장되었으며, 따라서 dll 이 필요하지 않습니다.
; 주의) 많은 DLL 파일들은 PECL DLL 다운로드 (PHP 5) 와 잘 분리된 extensions/ (PHP 4),
; ext/ (PHP 5) 확장 폴더에 위치합니다.
; 확실히 알맞은 extension_dir 지시어를 세팅해야 합니다.
;
;extension=php_bz2.dll
;extension=php_curl.dll
;extension=php_fileinfo.dll
;extension=php_gd2.dll
;extension=php_gettext.dll
;extension=php_gmp.dll
;extension=php_intl.dll
;extension=php_imap.dll
;extension=php_interbase.dll
;extension=php_ldap.dll
;extension=php_mbstring.dll
;extension=php_exif.dll      ; mbstring에 의존하기 때문에 그 이후에 위치해야 합니다. 
;extension=php_mysql.dll
;extension=php_mysqli.dll
;extension=php_oci8.dll      ; Orcale 10gR2 인스턴스 클라이언트가 사용.
;extension=php_oci8_11g.dll  ; Orcale 11gR2 인스턴스 클라이언트가 사용.
;extension=php_openssl.dll
;extension=php_pdo_firebird.dll
;extension=php_pdo_mysql.dll
;extension=php_pdo_oci.dll
;extension=php_pdo_odbc.dll
;extension=php_pdo_pgsql.dll
;extension=php_pdo_sqlite.dll
;extension=php_pgsql.dll
;extension=php_pspell.dll
;extension=php_shmop.dll

; PHP 배포판에서 사용할 MIBS 데이터가 반드시 설치되어 있어야 합니다.
; See http://www.php.net/manual/en/snmp.installation.php 
;extension=php_snmp.dll

;extension=php_soap.dll
;extension=php_sockets.dll
;extension=php_sqlite3.dll
;extension=php_sybase_ct.dll
;extension=php_tidy.dll
;extension=php_xmlrpc.dll
;extension=php_xsl.dll

;;;;;;;;;;;;;;;;;;;
; Module Settings ;
;;;;;;;;;;;;;;;;;;;

[CLI Server]
; CLI 웹 서버가 ANSI 컬러 코딩을 터미널 출력에서 사용할지 말지를 결정.
cli_server.color = On

[Date]
; date 함수에서 사용되어질 기본 타임존을 정의.
; http://php.net/date.timezone
;date.timezone =

; http://php.net/date.default-latitude
;date.default_latitude = 31.7667

; http://php.net/date.default-longitude
;date.default_longitude = 35.2333

; http://php.net/date.sunrise-zenith
;date.sunrise_zenith = 90.583333

; http://php.net/date.sunset-zenith
;date.sunset_zenith = 90.583333

[filter]
; http://php.net/filter.default
;filter.default = unsafe_raw

; http://php.net/filter.default-flags
;filter.default_flags =

[iconv]
;iconv.input_encoding = ISO-8859-1
;iconv.internal_encoding = ISO-8859-1
;iconv.output_encoding = ISO-8859-1

[intl]
;intl.default_locale =
; 이 지시어는 intl 함수에서 어떤 오류가 생겼을때에 당신이 PHP 오류를 만든다는 것을 허용합니다.
; 이 값은 에러를 만드는 수준입니다. 기본 값은 0 이며 어떤 오류로 만들지 않습니다.
;intl.error_level = E_WARNING

[sqlite]
; http://php.net/sqlite.assoc-case
;sqlite.assoc_case = 0

[sqlite3]
;sqlite3.extension_dir =

[Pcre]
;PCRE 라이브러리의 백트랙킹 제한.
; http://php.net/pcre.backtrack-limit
;pcre.backtrack_limit=100000

;PCRE 라이브러리 재귀 제한.
;만약 당신이 이 값을 높게 지정한다면 당신은 활용가능한 모든 프로세스 스택을 소모하고
;결국 PHP는 크래쉬 될수 있음을 주의하세요.(운영체제가 정한 스택 크기 제한에 도달했기 때문에)
; http://php.net/pcre.recursion-limit
;pcre.recursion_limit=100000

[Pdo]
; ODBC 접속 Pool 을 할지 말지. "strict", "relaxed" 혹은 "off" 중에 하나 일 수 있습니다.
; http://php.net/pdo-odbc.connection-pooling
;pdo_odbc.connection_pooling=strict

;pdo_odbc.db2_instance_name

[Pdo_mysql]
; 만약 mysqlnd 를 사용하는 경우: 내부 결과 집합 캐쉬를 위한 캐쉬 슬릇의 수.
; http://php.net/pdo_mysql.cache_size
pdo_mysql.cache_size = 2000

; local MySQL 접속에 대한 기본 소켓 이름. 만약 비었다면, 내장된 MySQL 기본값을 사용.
; http://php.net/pdo_mysql.default-socket
pdo_mysql.default_socket=

[Phar]
; http://php.net/phar.readonly
;phar.readonly = On

; http://php.net/phar.require-hash
;phar.require_hash = On

;phar.cache_list =

[mail function]
; 오직 Win32를 위한 것.
; http://php.net/smtp
SMTP = localhost
; http://php.net/smtp-port
smtp_port = 25

; 오직 Win32를 위한 것.
; http://php.net/sendmail-from
;sendmail_from = me@example.com

; 오직 Unix를 위한 것. 여러분 인수를 제공 할 수 있습니다. (기본값: "sendmail -t -i")
; http://php.net/sendmail-path
;sendmail_path =

; 센드메일 바이너리에 추가적인 파라메터들처럼 전달할 수 있는 특별한 파라메터 추가를 강제합니다.
; 이러한 파라메터들은 safe 모드에서 조차 mail() 에 다섯번째 파라메터의 값을 항상 교체 합니다. 
;mail.force_extra_parameters =

; X-PHP-Originating-Script 추가: 즉 파일이름 이러서 스크립트의 uid 가 포함 됩니다.
mail.add_x_header = On

; 모든 mail() 호출에대한 로그의 로그 파일에 경로. 로그 항목들에는 스크립트 전체 경로, 라인 수,
; 주소들과 헤더들을 포함 합니다.
;mail.log =
; syslog에 메일을 로그 합니다.(NT 에서는 이벤트 로그, Windows 95 에서는 적절하지 않습니다.)
;mail.log = syslog

[SQL]
; http://php.net/sql.safe-mode
sql.safe_mode = Off

[ODBC]
; http://php.net/odbc.default-db
;odbc.default_db    =  Not yet implemented

; http://php.net/odbc.default-user
;odbc.default_user  =  Not yet implemented

; http://php.net/odbc.default-pw
;odbc.default_pw    =  Not yet implemented

; ODBC 커서 모델을 제어.
; Default: SQL_CURSOR_STATIC (default).
;odbc.default_cursortype

; 영구 링크를 방지하거나 허용.
; http://php.net/odbc.allow-persistent
odbc.allow_persistent = On

; 연결이 재사용하기 전에 여전히 유효한지 체크.
; http://php.net/odbc.check-persistent
odbc.check_persistent = On

; 영구 링크의 최대 수. -1 은 제한 없음.
; http://php.net/odbc.max-persistent
odbc.max_persistent = -1

; (영구 + 비영구) 링크의 최대 수. -1 은 제한 없음.
; http://php.net/odbc.max-links
odbc.max_links = -1

; LONG 필드 다루기. 변수들의 byte 수를 리턴 합니다. 0 은 passthru 를 뜻 합니다.
; http://php.net/odbc.defaultlrl
odbc.defaultlrl = 4096

; 바이너리 데이터 다루기. 0은 passthru, 1은 is 처럼 리턴, 2는 char 로 변환.
; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
; odbc.defaultlrl 과 odbc.defaultbinmode 의 해설에 대한 odbc_longreadlen 과 odbc_binmode 문서를 보세요.
; http://php.net/odbc.defaultbinmode
odbc.defaultbinmode = 1

;birdstep.max_links = -1

[Interbase]
; 영구 링크를 방지하거나 허용.
ibase.allow_persistent = 1

; 영구 링크의 최대 수. -1 은 제한 없음.
ibase.max_persistent = -1

; (영구 + 비영구) 링크의 최대 수. -1 은 제한 없음.
ibase.max_links = -1

; ibase_connect() 에 대한 기본 데이터베이스 이름.
;ibase.default_db =

; ibase_connect() 에 대한 기본 사용자 이름.
;ibase.default_user =

; ibase_connect() 에 대한 기본 패스워드.
;ibase.default_password =

; ibase_connect() 에 대한 기본 캐릭터셋.
;ibase.default_charset =

; 기본 timestamp 포맷
ibase.timestampformat = "%Y-%m-%d %H:%M:%S"

; 기본 date 포맷.
ibase.dateformat = "%Y-%m-%d"

; 기본 time 포맷.
ibase.timeformat = "%H:%M:%S"

[MySQL]
; PHP관점에서, LOAD DATA 문을 사용한 로컬 파일들의 접근 허용.
; http://php.net/mysql.allow_local_infile
mysql.allow_local_infile = On

; 영구 링크를 방지 혹은 허용.
; http://php.net/mysql.allow-persistent
mysql.allow_persistent = On

; 만약 mysqlnd 를 사용하는 경우: 내부 결과 집합 캐쉬를 위한 캐쉬 슬릇의 수.
; http://php.net/mysql.cache_size
mysql.cache_size = 2000

; 영구 링크의 최대 수. -1 은 제한 없음.
; http://php.net/mysql.max-persistent
mysql.max_persistent = -1

; (영구 + 비영구) 링크의 최대 수. -1 은 제한 없음.
; http://php.net/mysql.max-links
mysql.max_links = -1

; mysql_connect() 함수에 대한 기본 포트. 만약 지정하지 않는다면, mysql_connect() 는
; $MYSQL_TCP_PORT 환경변수나 /etc/services 목록에 mysql-tcp 를 사용하거나 컴파일 타임에 정의된
; MYSQL_PORT 를 사용할 것입니다. Win32는 오직 MYSQL_PORT 를 찾습니다.
; http://php.net/mysql.default-port
mysql.default_port =

; local MySQL 접속에 대한 기본 소켓 이름. 만약 빈 값이면, MySQL 에 내장된 기본 값을 사용 합니다.
; http://php.net/mysql.default-socket
mysql.default_socket =

; mysql_connect() 함수에 대한 기본 호스트. (safe mode 에서는 적용되지 않음)
; http://php.net/mysql.default-host
mysql.default_host =

; mysql_connect() 함수에 대한 사용자. (safe mode 에서는 적용되지 않음)
; http://php.net/mysql.default-user
mysql.default_user =

; mysql_connect() 함수에 대한 기본 패스워드. (safe mode 에서는 적용되지 않음)
; 이 파일에 패스워드를 저장하는 것은 일반적으로 나쁜 아이디어임을 명심하십시오.
; PHP 접근하는 아무 사용자나 'echo get_cfg_var("mysql.default_password")' 를 실행시킬 수 있으며
; 이 패스워드를 얻을 수 있으며 당연히 이 파일에 접근해서 읽을수 있는 아무 사용자들 역시 패스워드를 얻을 수 있습니다.
; http://php.net/mysql.default-password
mysql.default_password =

; 접속 타임아웃에 대한 최대 시간(초 단위). -1 은 제한 없음.
; http://php.net/mysql.connect-timeout
mysql.connect_timeout = 60

; 추적 모드. trace_mode 가 활성화되면, table/index 스캔에 대한 경고나 SQL-Error 들이 출력되어 집니다.
; http://php.net/mysql.trace-mode
mysql.trace_mode = Off

[MySQLi]

; 영구 링크에 대한 최대 수. -1 은 제한 없음.
; http://php.net/mysqli.max-persistent
mysqli.max_persistent = -1

; PHP관점에서, LOAD DATA 문을 사용한 로컬 파일들의 접근 허용.
; http://php.net/mysqli.allow_local_infile
;mysqli.allow_local_infile = On

; 영구 링크를 방지하거나 허용.
; http://php.net/mysqli.allow-persistent
mysqli.allow_persistent = On

; 링크 최대의 수. -1 은 제한 없음.
; http://php.net/mysqli.max-links
mysqli.max_links = -1

; 만약 mysqlnd 를 사용하는 경우: 내부 결과 집합 캐쉬를 위한 캐쉬 슬릇의 수.
; http://php.net/mysqli.cache_size
mysqli.cache_size = 2000

; mysqli_connect() 함수에 대한 기본 포트. 만약 지정하지 않는다면, mysql_connect() 는
; $MYSQL_TCP_PORT 환경변수나 /etc/services 목록에 mysql-tcp 를 사용하거나 컴파일 타임에 정의된
; MYSQL_PORT 를 사용할 것입니다. Win32는 오직 MYSQL_PORT 를 찾습니다.
; http://php.net/mysqli.default-port
mysqli.default_port = 3306

; local MySQL 접속에 대한 기본 소켓 이름. 만약 빈 값이면, MySQL 에 내장된 기본 값을 사용 합니다.
; http://php.net/mysqli.default-socket
mysqli.default_socket =

; mysql_connect() 함수에 대한 기본 호스트. (safe mode 에서는 적용되지 않음)
; http://php.net/mysqli.default-host
mysqli.default_host =

; mysql_connect() 함수에 대한 사용자. (safe mode 에서는 적용되지 않음)
; http://php.net/mysqli.default-user
mysqli.default_user =

; mysqli_connect() 함수에 대한 기본 패스워드. (safe mode 에서는 적용되지 않음)
; 이 파일에 패스워드를 저장하는 것은 일반적으로 나쁜 아이디어임을 명심하십시오.
; PHP 접근하는 아무 사용자나 'echo get_cfg_var("mysql.default_password")' 를 실행시킬 수 있으며
; 이 패스워드를 얻을 수 있으며 당연히 이 파일에 접근해서 읽을수 있는 아무 사용자들 역시 패스워드를 얻을 수 있습니다.
; http://php.net/mysqli.default-pw
mysqli.default_pw =

; 재접속을 방지하거나 허용.
mysqli.reconnect = Off

[mysqlnd]
; MySQL 연산을 모니터하고 튜닝하는데 사용되어질 수 있는 mysqlnd 에 의한 일반적인 통계자료의 수집을 활성/비활성.
; http://php.net/mysqlnd.collect_statistics
mysqlnd.collect_statistics = On

; MySQL 연산을 모니터하고 튜닝하는데 사용되어질 수 있는 mysqlnd 에 의한 메모리 사용의 수집을 활성/비활성.
; http://php.net/mysqlnd.collect_memory_statistics
mysqlnd.collect_memory_statistics = Off

; MySQL에 명령어를 보낼기 위해 사용할 미리 할당할 버퍼 크기 (bytes)
; http://php.net/mysqlnd.net_cmd_buffer_size
;mysqlnd.net_cmd_buffer_size = 2048

; 서버에 의해서 보내진 데이터를 읽기 위해 사용할 미리 할당할 버퍼 크기 (bytes)
; http://php.net/mysqlnd.net_read_buffer_size
;mysqlnd.net_read_buffer_size = 32768

[OCI8]

; Connection: Enables privileged connections using external
; credentials (OCI_SYSOPER, OCI_SYSDBA)
; http://php.net/oci8.privileged-connect
;oci8.privileged_connect = Off

; Connection: The maximum number of persistent OCI8 connections per
; process. Using -1 means no limit.
; http://php.net/oci8.max-persistent
;oci8.max_persistent = -1

; Connection: The maximum number of seconds a process is allowed to
; maintain an idle persistent connection. Using -1 means idle
; persistent connections will be maintained forever.
; http://php.net/oci8.persistent-timeout
;oci8.persistent_timeout = -1

; Connection: The number of seconds that must pass before issuing a
; ping during oci_pconnect() to check the connection validity. When
; set to 0, each oci_pconnect() will cause a ping. Using -1 disables
; pings completely.
; http://php.net/oci8.ping-interval
;oci8.ping_interval = 60

; Connection: Set this to a user chosen connection class to be used
; for all pooled server requests with Oracle 11g Database Resident
; Connection Pooling (DRCP).  To use DRCP, this value should be set to
; the same string for all web servers running the same application,
; the database pool must be configured, and the connection string must
; specify to use a pooled server.
;oci8.connection_class =

; High Availability: Using On lets PHP receive Fast Application
; Notification (FAN) events generated when a database node fails. The
; database must also be configured to post FAN events.
;oci8.events = Off

; Tuning: This option enables statement caching, and specifies how
; many statements to cache. Using 0 disables statement caching.
; http://php.net/oci8.statement-cache-size
;oci8.statement_cache_size = 20

; Tuning: Enables statement prefetching and sets the default number of
; rows that will be fetched automatically after statement execution.
; http://php.net/oci8.default-prefetch
;oci8.default_prefetch = 100

; Compatibility. Using On means oci_close() will not close
; oci_connect() and oci_new_connect() connections.
; http://php.net/oci8.old-oci-close-semantics
;oci8.old_oci_close_semantics = Off

[PostgreSQL]
; 영구 링크를 방지 혹은 허용.
; http://php.net/pgsql.allow-persistent
pgsql.allow_persistent = On

; pg_pconnect() 함수를 이용한 영구 링크 깨진것을 항상 탐지.
; 자동 리셋 기능은 조금의 오버헤드를 필요로 합니다.
; http://php.net/pgsql.auto-reset-persistent
pgsql.auto_reset_persistent = Off

; 영구 링크의 최대 수. -1 은 제한 없음.
; http://php.net/pgsql.max-persistent
pgsql.max_persistent = -1

; (영구 + 비영구) 링크의 최대 수. -1 은 제한 없음.
; http://php.net/pgsql.max-links
pgsql.max_links = -1

; PostgreSQL 백엔드 Notice 메시지를 무시할지 말지 결정.
; Notice 메시지 로깅은 조금의 오버헤드를 필요로 합니다.
; http://php.net/pgsql.ignore-notice
pgsql.ignore_notice = 0

; PostgreSQL 백엔드 Notice 메시지를 로그할지 말지 결정.
; pgsql.ignore_noteice=0 으로 하지 않는 한 모듈은 notice 메시지를 로그할 수 없습니다.
; http://php.net/pgsql.log-notice
pgsql.log_notice = 0

[Sybase-CT]
; Allow or prevent persistent links.
; http://php.net/sybct.allow-persistent
sybct.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
; http://php.net/sybct.max-persistent
sybct.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
; http://php.net/sybct.max-links
sybct.max_links = -1

; Minimum server message severity to display.
; http://php.net/sybct.min-server-severity
sybct.min_server_severity = 10

; Minimum client message severity to display.
; http://php.net/sybct.min-client-severity
sybct.min_client_severity = 10

; Set per-context timeout
; http://php.net/sybct.timeout
;sybct.timeout=

;sybct.packet_size

; The maximum time in seconds to wait for a connection attempt to succeed before returning failure.
; Default: one minute
;sybct.login_timeout=

; The name of the host you claim to be connecting from, for display by sp_who.
; Default: none
;sybct.hostname=

; Allows you to define how often deadlocks are to be retried. -1 means "forever".
; Default: 0
;sybct.deadlock_retry_count=

[bcmath]
; Number of decimal digits for all bcmath functions.
; http://php.net/bcmath.scale
bcmath.scale = 0

[browscap]
; http://php.net/browscap
;browscap = extra/browscap.ini

[Session]
; 데이터를 저장/받기 위해 사용할 핸들러.
; http://php.net/session.save-handler
session.save_handler = files

; save_handler 에 전달될 인자. 파일(File)을 쓸경우에, 이것은 데이터를 저장할 파일의 경로 입니다.
; 주의: 윈도우즈 사용자들은 PHP's 세션 함수를 사용하기 위해서 이 변수를 교체해야만 합니다.
;
; 경로는 다음과 같이 정의 될 수 있습니다:
;
;     session.save_path = "N;/path"
;
; N 는 정수 입니다. N은 /path 에 모든 세션 파일들을 저장하는 대신에 N-Levels 깊이의 서브디렉토리를 사용하도록 하고
; 세션 데이터들은 그 디렉토리에 저장됩니다. 이것은 당신의 OS가 한 디렉토리에 너무나 많은 파일을 가진게 문제가되거나
; 많은 세션을 다루는 서버에 보다 효율적인 레이아웃이 있을 경우에 유용합니다.
;
; 주의 1: PHP는 자동으로 이 디렉토리 구조를 생성하지 않습니다.
;        자동으로 디렉토리를 생성하기 위한 목적으로 ext/session 디렉토리에 스크립트를 사용할 수 있습니다.
; 주의 2: 세션 스토리지에 대해 서브디렉토리 사용을 선택했다면 아래의 가비지 컬렉션 섹션을 보세요.
;
; 파일 스토리지 모듈은 기본적으로 600 모드를 사용해 파일들을 생성합니다.
; 당신은 이것을 다음과 같이 써서 바꿀수 있습니다.
;
;     session.save_path = "N;MODE;/path"
;
; MODE 부분은 8진수 표현 입니다. 이것은 프로세스의 umask 를 덮어쓰지 않습니다.
; http://php.net/session.save-path
;session.save_path = "/tmp"

; strict 세션 모드를 사용할지 말지를 결정.
; Strict 세션 모드는 브라우저가 초기화하지 않은 세션 아이디를 보낸다면, 초기화 하지 않은 세션 아이디와
; 재생성한 세션 아이디를 받아들이지 않습니다. Strict 모드는 
; Strict session mode does not accept uninitialized session ID and regenerate
; session ID if browser sends uninitialized session ID. Strict mode protects
; applications from session fixation via session adoption vulnerability. It is
; disabled by default for maximum compatibility, but enabling it is encouraged.
; https://wiki.php.net/rfc/strict_sessions
session.use_strict_mode = 0

; 쿠키를 사용할지 말지를 결정.
; http://php.net/session.use-cookies
session.use_cookies = 1

; http://php.net/session.cookie-secure
;session.cookie_secure =

; 이 옵션은 세션 아이디를 저장하고 관리하는데 쿠키를 사용하고 가지고 오도록 PHP를 강제합니다.
; This option forces PHP to fetch and use a cookie for storing and maintaining
; the session id. We encourage this operation as it's very helpful in combating
; session hijacking when not specifying and managing your own session id. It is
; not the end all be all of session hijacking defense, but it's a good start.
; http://php.net/session.use-only-cookies
session.use_only_cookies = 1

; 세션 이름(쿠키이름 처럼 사용됨)
; http://php.net/session.name
session.name = PHPSESSID

; 시작시에 세션 초기화.
; http://php.net/session.auto-start
session.auto_start = 0

; 쿠키의 Lifetime 시간(단위 초). 만약 0 이면 브라우저가 재시작될때까지 입니다.
; http://php.net/session.cookie-lifetime
session.cookie_lifetime = 0

; 쿠키 유효성에 대한 경로.
; http://php.net/session.cookie-path
session.cookie_path = /

; 쿠키 유효성에 대한 도메인.
; http://php.net/session.cookie-domain
session.cookie_domain =

; Whether or not to add the httpOnly flag to the cookie, which makes it inaccessible to browser scripting languages such as JavaScript.
; http://php.net/session.cookie-httponly
session.cookie_httponly =

; 
; Handler used to serialize data.  php is the standard serializer of PHP.
; http://php.net/session.serialize-handler
session.serialize_handler = php

; Defines the probability that the 'garbage collection' process is started
; on every session initialization. The probability is calculated by using
; gc_probability/gc_divisor. Where session.gc_probability is the numerator
; and gc_divisor is the denominator in the equation. Setting this value to 1
; when the session.gc_divisor value is 100 will give you approximately a 1% chance
; the gc will run on any give request.
; 기본 값: 1
; 개발버전 값: 1
; 프로덕션 값: 1
; http://php.net/session.gc-probability
session.gc_probability = 1

; Defines the probability that the 'garbage collection' process is started on every
; session initialization. The probability is calculated by using the following equation:
; gc_probability/gc_divisor. Where session.gc_probability is the numerator and
; session.gc_divisor is the denominator in the equation. Setting this value to 1
; when the session.gc_divisor value is 100 will give you approximately a 1% chance
; the gc will run on any give request. Increasing this value to 1000 will give you
; a 0.1% chance the gc will run on any give request. For high volume production servers,
; this is a more efficient approach.
; 기본 값: 100
; 개발버전 값: 1000
; 프로덕션 값: 1000
; http://php.net/session.gc-divisor
session.gc_divisor = 1000

; After this number of seconds, stored data will be seen as 'garbage' and
; cleaned up by the garbage collection process.
; http://php.net/session.gc-maxlifetime
session.gc_maxlifetime = 1440

; NOTE: If you are using the subdirectory option for storing session files
;       (see session.save_path above), then garbage collection does *not*
;       happen automatically.  You will need to do your own garbage
;       collection through a shell script, cron entry, or some other method.
;       For example, the following script would is the equivalent of
;       setting session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):
;          find /path/to/sessions -cmin +24 -type f | xargs rm

; PHP 4.2 and less have an undocumented feature/bug that allows you to
; to initialize a session variable in the global scope.
; PHP 4.3 and later will warn you, if this feature is used.
; You can disable the feature and the warning separately. At this time,
; the warning is only displayed, if bug_compat_42 is enabled. This feature
; introduces some serious security problems if not handled correctly. It's
; recommended that you do not use this feature on production servers. But you
; should enable this on development servers and enable the warning as well. If you
; do not enable the feature on development servers, you won't be warned when it's
; used and debugging errors caused by this can be difficult to track down.
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: Off
; http://php.net/session.bug-compat-42
session.bug_compat_42 = Off

; This setting controls whether or not you are warned by PHP when initializing a
; session value into the global space. session.bug_compat_42 must be enabled before
; these warnings can be issued by PHP. See the directive above for more information.
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: Off
; http://php.net/session.bug-compat-warn
session.bug_compat_warn = Off

; Check HTTP Referer to invalidate externally stored URLs containing ids.
; HTTP_REFERER has to contain this substring for the session to be
; considered as valid.
; http://php.net/session.referer-check
session.referer_check =

; 파일에서 얼마나 많은 크기를 읽을지를 결정(단위 byte)
; http://php.net/session.entropy-length
;session.entropy_length = 32

; 여기에 세션 아이디를 생성하기 위한 것이 정의되어 집니다.
; http://php.net/session.entropy-file
; 기본은 /dev/urandom 입니다.
; /dev/urandom 을 가지고 있지 않고 /dev/arandom 을가진 시스템에 경우에 이것의 기본값은 /dev/arandom 이 될 겁니다.
; If neither are found at compile time, the default is no entropy file.
; On windows, setting the entropy_length setting will activate the
; Windows random source (using the CryptoAPI)
;session.entropy_file = /dev/urandom

; Set to {nocache,private,public,} to determine HTTP caching aspects
; or leave this empty to avoid sending anti-caching headers.
; http://php.net/session.cache-limiter
session.cache_limiter = nocache

; Document expires after n minutes.
; http://php.net/session.cache-expire
session.cache_expire = 180

; trans sid support is disabled by default.
; Use of trans sid may risk your users security.
; Use this option with caution.
; - User may send URL contains active session ID
;   to other person via. email/irc/etc.
; - URL that contains active session ID may be stored
;   in publicly accessible computer.
; - User may access your site with the same session ID
;   always using URL stored in browser's history or bookmarks.
; http://php.net/session.use-trans-sid
session.use_trans_sid = 0

; Select a hash function for use in generating session ids.
; Possible Values
;   0  (MD5 128 bits)
;   1  (SHA-1 160 bits)
; This option may also be set to the name of any hash function supported by
; the hash extension. A list of available hashes is returned by the hash_algos()
; function.
; http://php.net/session.hash-function
session.hash_function = 0

; Define how many bits are stored in each character when converting
; the binary hash data to something readable.
; Possible values:
;   4  (4 bits: 0-9, a-f)
;   5  (5 bits: 0-9, a-v)
;   6  (6 bits: 0-9, a-z, A-Z, "-", ",")
; 기본 값: 4
; 개발버전 값: 5
; 프로덕션 값: 5
; http://php.net/session.hash-bits-per-character
session.hash_bits_per_character = 5

; The URL rewriter will look for URLs in a defined set of HTML tags.
; form/fieldset are special; if you include them here, the rewriter will
; add a hidden <input> field with the info which is otherwise appended
; to URLs.  If you want XHTML conformity, remove the form entry.
; Note that all valid entries require a "=", even if no value follows.
; 기본 값: "a=href,area=href,frame=src,form=,fieldset="
; 개발버전 값: "a=href,area=href,frame=src,input=src,form=fakeentry"
; 프로덕션 값: "a=href,area=href,frame=src,input=src,form=fakeentry"
; http://php.net/url-rewriter.tags
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"

; Enable upload progress tracking in $_SESSION
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: On
; http://php.net/session.upload-progress.enabled
;session.upload_progress.enabled = On

; Cleanup the progress information as soon as all POST data has been read
; (i.e. upload completed).
; 기본 값: On
; 개발버전 값: On
; 프로덕션 값: On
; http://php.net/session.upload-progress.cleanup
;session.upload_progress.cleanup = On

; A prefix used for the upload progress key in $_SESSION
; 기본 값: "upload_progress_"
; 개발버전 값: "upload_progress_"
; 프로덕션 값: "upload_progress_"
; http://php.net/session.upload-progress.prefix
;session.upload_progress.prefix = "upload_progress_"

; The index name (concatenated with the prefix) in $_SESSION
; containing the upload progress information
; 기본 값: "PHP_SESSION_UPLOAD_PROGRESS"
; 개발버전 값: "PHP_SESSION_UPLOAD_PROGRESS"
; 프로덕션 값: "PHP_SESSION_UPLOAD_PROGRESS"
; http://php.net/session.upload-progress.name
;session.upload_progress.name = "PHP_SESSION_UPLOAD_PROGRESS"

; How frequently the upload progress should be updated.
; Given either in percentages (per-file), or in bytes
; 기본 값: "1%"
; 개발버전 값: "1%"
; 프로덕션 값: "1%"
; http://php.net/session.upload-progress.freq
;session.upload_progress.freq =  "1%"

; The minimum delay between updates, in seconds
; 기본 값: 1
; 개발버전 값: 1
; 프로덕션 값: 1
; http://php.net/session.upload-progress.min-freq
;session.upload_progress.min_freq = "1"

[MSSQL]
; Allow or prevent persistent links.
mssql.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
mssql.max_persistent = -1

; Maximum number of links (persistent+non persistent).  -1 means no limit.
mssql.max_links = -1

; Minimum error severity to display.
mssql.min_error_severity = 10

; Minimum message severity to display.
mssql.min_message_severity = 10

; Compatibility mode with old versions of PHP 3.0.
mssql.compatibility_mode = Off

; Connect timeout
;mssql.connect_timeout = 5

; Query timeout
;mssql.timeout = 60

; Valid range 0 - 2147483647.  Default = 4096.
;mssql.textlimit = 4096

; Valid range 0 - 2147483647.  Default = 4096.
;mssql.textsize = 4096

; Limits the number of records in each batch.  0 = all records in one batch.
;mssql.batchsize = 0

; Specify how datetime and datetim4 columns are returned
; On => Returns data converted to SQL server settings
; Off => Returns values as YYYY-MM-DD hh:mm:ss
;mssql.datetimeconvert = On

; Use NT authentication when connecting to the server
mssql.secure_connection = Off

; Specify max number of processes. -1 = library default
; msdlib defaults to 25
; FreeTDS defaults to 4096
;mssql.max_procs = -1

; Specify client character set.
; If empty or not set the client charset from freetds.conf is used
; This is only used when compiled with FreeTDS
;mssql.charset = "ISO-8859-1"

[Assertion]
; Assert(expr); active by default.
; http://php.net/assert.active
;assert.active = On

; Issue a PHP warning for each failed assertion.
; http://php.net/assert.warning
;assert.warning = On

; Don't bail out by default.
; http://php.net/assert.bail
;assert.bail = Off

; User-function to be called if an assertion fails.
; http://php.net/assert.callback
;assert.callback = 0

; Eval the expression with current error_reporting().  Set to true if you want
; error_reporting(0) around the eval().
; http://php.net/assert.quiet-eval
;assert.quiet_eval = 0

[COM]
; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
; http://php.net/com.typelib-file
;com.typelib_file =

; allow Distributed-COM calls
; http://php.net/com.allow-dcom
;com.allow_dcom = true

; autoregister constants of a components typlib on com_load()
; http://php.net/com.autoregister-typelib
;com.autoregister_typelib = true

; register constants casesensitive
; http://php.net/com.autoregister-casesensitive
;com.autoregister_casesensitive = false

; show warnings on duplicate constant registrations
; http://php.net/com.autoregister-verbose
;com.autoregister_verbose = true

; The default character set code-page to use when passing strings to and from COM objects.
; Default: system ANSI code page
;com.code_page=

[mbstring]
; language for internal character representation.
; http://php.net/mbstring.language
;mbstring.language = Japanese

; internal/script encoding.
; Some encoding cannot work as internal encoding.
; (e.g. SJIS, BIG5, ISO-2022-*)
; http://php.net/mbstring.internal-encoding
;mbstring.internal_encoding = UTF-8

; http input encoding.
; http://php.net/mbstring.http-input
;mbstring.http_input = UTF-8

; http output encoding. mb_output_handler must be
; registered as output buffer to function
; http://php.net/mbstring.http-output
;mbstring.http_output = pass

; enable automatic encoding translation according to
; mbstring.internal_encoding setting. Input chars are
; converted to internal encoding by setting this to On.
; Note: Do _not_ use automatic encoding translation for
;       portable libs/applications.
; http://php.net/mbstring.encoding-translation
;mbstring.encoding_translation = Off

; automatic encoding detection order.
; auto means
; http://php.net/mbstring.detect-order
;mbstring.detect_order = auto

; substitute_character used when character cannot be converted
; one from another
; http://php.net/mbstring.substitute-character
;mbstring.substitute_character = none

; overload(replace) single byte functions by mbstring functions.
; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
; etc. Possible values are 0,1,2,4 or combination of them.
; For example, 7 for overload everything.
; 0: No overload
; 1: Overload mail() function
; 2: Overload str*() functions
; 4: Overload ereg*() functions
; http://php.net/mbstring.func-overload
;mbstring.func_overload = 0

; enable strict encoding detection.
;mbstring.strict_detection = On

; This directive specifies the regex pattern of content types for which mb_output_handler()
; is activated.
; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\+xml)
;mbstring.http_output_conv_mimetype=

[gd]
; Tell the jpeg decode to ignore warnings and try to create
; a gd image. The warning will then be displayed as notices
; disabled by default
; http://php.net/gd.jpeg-ignore-warning
;gd.jpeg_ignore_warning = 0

[exif]
; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.
; With mbstring support this will automatically be converted into the encoding
; given by corresponding encode setting. When empty mbstring.internal_encoding
; is used. For the decode settings you can distinguish between motorola and
; intel byte order. A decode setting cannot be empty.
; http://php.net/exif.encode-unicode
;exif.encode_unicode = ISO-8859-15

; http://php.net/exif.decode-unicode-motorola
;exif.decode_unicode_motorola = UCS-2BE

; http://php.net/exif.decode-unicode-intel
;exif.decode_unicode_intel    = UCS-2LE

; http://php.net/exif.encode-jis
;exif.encode_jis =

; http://php.net/exif.decode-jis-motorola
;exif.decode_jis_motorola = JIS

; http://php.net/exif.decode-jis-intel
;exif.decode_jis_intel    = JIS

[Tidy]
; The path to a default tidy configuration file to use when using tidy
; http://php.net/tidy.default-config
;tidy.default_config = /usr/local/lib/php/default.tcfg

; Should tidy clean and repair output automatically?
; WARNING: Do not use this option if you are generating non-html content
; such as dynamic images
; http://php.net/tidy.clean-output
tidy.clean_output = Off

[soap]
; Enables or disables WSDL caching feature.
; http://php.net/soap.wsdl-cache-enabled
soap.wsdl_cache_enabled=1

; Sets the directory name where SOAP extension will put cache files.
; http://php.net/soap.wsdl-cache-dir
soap.wsdl_cache_dir="/tmp"

; (time to live) Sets the number of second while cached file will be used
; instead of original one.
; http://php.net/soap.wsdl-cache-ttl
soap.wsdl_cache_ttl=86400

; Sets the size of the cache limit. (Max. number of WSDL files to cache)
soap.wsdl_cache_limit = 5

[sysvshm]
; A default size of the shared memory segment
;sysvshm.init_mem = 10000

[ldap]
; Sets the maximum number of open links or -1 for unlimited.
ldap.max_links = -1

[mcrypt]
; mcrypt 세팅에 대한 보다 많은 정보는 http://php.net/mcrypt-module-open를 보세요.

; mcrypt 알고리즘을 로드할 디렉토리
; 기본값: libmcrypt로 컴파일된 디렉토리(보통 /usr/local/lib/libmcrypt)
;mcrypt.algorithms_dir=

; mcrypt 모드를 로드할 디렉토리
; 기본값: libmcrypt로 컴파일된 디렉토리(보통 /usr/local/lib/libmcrypt)
;mcrypt.modes_dir=

[dba]
;dba.default_handler=

[opcache]
; Zend OPCache 활성화 여부 결정
;opcache.enable=0

; PHP CLI 버전에서 Zend OPCache 활성화 여부 결정
;opcache.enable_cli=0

; OPCache 공유 메모리 저장소 사이즈
;opcache.memory_consumption=64

; 메모리에서 interned 문자열을 위해 사용할 메모리량(단위는 MB)
; interned string 에 대해서는 https://wiki.php.net/rfc/performanceimprovements 참조.
;opcache.interned_strings_buffer=4

; OPCache 해쉬 테이블에서 가질수 있는 키값의 최대 값.
; 이는 200 ~ 100000 사이에 값만 가질 수 있다.
;opcache.max_accelerated_files=2000

; 재시작이 스케줄 될때까지 "wasted" 최대 메모리 비율(percentage)
;opcache.max_wasted_percentage=5

; 이 값을 활성화 하면, OPCache 는 현재 작업디렉토리를 스크립트 키에 추가하고,
; 같은 이름(basename) 을 가진 파일들사이에 가능한 충돌을 제거하게 된다.
; 이 값을 비활성화하면 성능이 향상되지만, 존재하는 애플리케이션이 깨질 수 있다.
;opcache.use_cwd=1

; 이것을 비활성화하면, OPCache 를 수동으로 리셋해주거나
; 파일시스템이 변한것에대해 효과를 얻기위해서는 웹서버를 재시작 해줘야만 한다.
;opcache.validate_timestamps=1

; 공유 메모리 저장소 할당을 위해서 변경된 것들에서 얼마나 자주 파일 타임스템프를
; 체크(초단위)할지를 정한다. ("1" means validate once per second, but only
; once per request. "0" 은 늘 유효성 검사를 한다.)
;opcache.revalidate_freq=2

; include_path 최적화에서 파일 서치(search)를 할지 말지 결정.
;opcache.revalidate_path=0

; 이것을 비활성화 할 경우, 모든 PHPDoc 코멘트는 최적화 코드 사이즈를 줄이기 위해서 
; 코드로부터 삭제된다. 
;opcache.save_comments=1

; 이것을 비활성화 할 경우, PHPDoc 코멘트는 SHM 으로부터 로드되지 않으며, 그래서 "Doc Comments"는
; 늘 저장될 수 있다(svae_comments=1), but not loaded by applications that don't need them anyway.
;opcache.load_comments=1

; 이것을 활성화하면 fast shutdown 시퀀스는 accelerated code에 대해 사용되어진다.
;opcache.fast_shutdown=0

; file existence 가 성능기능(file_exists, etc.)을 오버라이드 하도록 허용.
;opcache.enable_file_override=0

; A bitmask, where each bit enables or disables the appropriate OPcache
; passes
;opcache.optimization_level=0xffffffff

;opcache.inherited_hack=1
;opcache.dups_fix=0

; OPCache 블랙리스트 파일의 위치(와일드카드 허용됨).
; 각 OPCache 블랙리스트 파일은 accelerate 가 필요없는 파일 이름을 가진 텍스트 파일이다.
; 파일 포멧은 새로운 라인에 파일 이름을 각각 추가하는 것이다. 
; 파일이름은 풀 패스이거나 파일의 prefix 일 수 있다. 예를들어
; /var/www/x 블랙리스트는 /var/www 에서 'x'로 시작하는 모든 디렉토리 혹은 파일이다. 
; 라인의 시작이 ; 라면 무신된다(코멘트).
;opcache.blacklist_filename=

; 캐쉬할 파일중에 큰 파일을 제외를 허용한다. 기본으로는 모든 파일을 캐쉬.
;opcache.max_file_size=0

; N 요청마다 캐쉬 체크섬을 체크.
; 기본값으로 "0" 은 체크를 비활성화함.
;opcache.consistency_checks=0

; 만일 캐쉬가 접근할 수 없게 되었을때에 시작을 위한 재시작 스케줄에 대해 얼마나 기달릴건지 결정.
;opcache.force_restart_timeout=180

; OPcache error_log file name. Empty string assumes "stderr".
;opcache.error_log=

; 모든 OPCache 에러들은 웹서버 로그로 간다.
; 기본적으로, 오직 Fatal 에러들 (level 0) 혹은 level 1 에러들이 로깅된다.
; 여러분은 추가로 warnings (level 2), info messages (level 3) 혹은 debug message (level 4) 를 활성화 할수 있다.
;opcache.log_verbosity_level=1

; Preferred Shared Memory back-end. Leave empty and let the system decide.
;opcache.preferred_memory_model=

; 스크립트가 실행중에 애기치않은 쓰기로부터 공유메모리를 보호한다.
; 이는 오직 내부 디버그용으로만 유용하다.
;opcache.protect_memory=0

[curl]
; CURLOPT_CAINFO 옵션에 대한 기본 값. 이것은 절대경로를 필요로 함.
;curl.cainfo =

; Local Variables:
; tab-width: 4
; End:
